diff -ur -x '*.[oa]' ../../sources_5117/audio/Makefile ../audio/Makefile
--- ../../sources_5117/audio/Makefile	2008-06-01 15:45:50.000000000 -0400
+++ ../audio/Makefile	2009-09-27 18:39:02.000000000 -0400
@@ -5,10 +5,13 @@
 
 all: libaudio.a
 
-OBJECTS = pa_unix_hostapis.o pa_linux_alsa.o \
-	pa_front.o pa_unix_util.o pa_debugprint.o pa_cpuload.o \
+OBJECTS = \
+	pa_unix_util.o pa_unix_hostapis.o pa_linux_alsa.o \
+	pa_win_util.o pa_win_hostapis.o pa_win_wmme.o pa_win_waveformat.o pa_skeleton.o \
+	pa_front.o pa_debugprint.o pa_cpuload.o \
 	pa_allocation.o pa_process.o pa_converters.o pa_dither.o \
 	pa_stream.o
+#	pa_win_wmme.o pa_win_ds.o
 
 all: libaudio.a
 libaudio.a: $(OBJECTS)
diff -ur -x '*.[oa]' ../../sources_5117/audio/pa_linux_alsa.c ../audio/pa_linux_alsa.c
--- ../../sources_5117/audio/pa_linux_alsa.c	2007-09-12 13:39:48.000000000 -0400
+++ ../audio/pa_linux_alsa.c	2009-09-29 10:09:08.000000000 -0400
@@ -1,3 +1,4 @@
+#ifndef _WIN32
 /*
  * $Id: pa_linux_alsa.c 1278 2007-09-12 17:39:48Z aknudsen $
  * PortAudio Portable Real-Time Audio Library
@@ -3561,3 +3562,4 @@
 error:
     return result;
 }
+#endif
diff -ur -x '*.[oa]' ../../sources_5117/audio/pa_skeleton.c ../audio/pa_skeleton.c
--- ../../sources_5117/audio/pa_skeleton.c	2006-08-26 04:27:53.000000000 -0400
+++ ../audio/pa_skeleton.c	2009-09-29 10:09:08.000000000 -0400
@@ -1,3 +1,4 @@
+#ifdef _WIN32
 /*
  * $Id: pa_skeleton.c 1097 2006-08-26 08:27:53Z rossb $
  * Portable Audio I/O Library skeleton implementation
@@ -810,7 +811,4 @@
 
     return 0;
 }
-
-
-
-
+#endif
diff -ur -x '*.[oa]' ../../sources_5117/audio/pa_unix_hostapis.c ../audio/pa_unix_hostapis.c
--- ../../sources_5117/audio/pa_unix_hostapis.c	2008-06-11 08:08:23.000000000 -0400
+++ ../audio/pa_unix_hostapis.c	2009-09-29 10:09:08.000000000 -0400
@@ -1,3 +1,4 @@
+#ifndef _WIN32
 /*
  * $Id: pa_unix_hostapis.c 1097 2006-08-26 08:27:53Z rossb $
  * Portable Audio I/O Library UNIX initialization table
@@ -64,3 +65,4 @@
     };
 
 int paDefaultHostApiIndex = 0;
+#endif
diff -ur -x '*.[oa]' ../../sources_5117/audio/pa_unix_util.c ../audio/pa_unix_util.c
--- ../../sources_5117/audio/pa_unix_util.c	2007-06-16 10:49:43.000000000 -0400
+++ ../audio/pa_unix_util.c	2009-09-29 10:09:08.000000000 -0400
@@ -1,3 +1,4 @@
+#ifndef _WIN32
 /*
  * $Id: pa_unix_util.c 1232 2007-06-16 14:49:43Z rossb $
  * Portable Audio I/O Library
@@ -664,3 +665,4 @@
 }
 */
 #endif
+#endif
diff -ur -x '*.[oa]' ../../sources_5117/audio/pa_win_ds.c ../audio/pa_win_ds.c
--- ../../sources_5117/audio/pa_win_ds.c	2008-07-03 15:17:48.000000000 -0400
+++ ../audio/pa_win_ds.c	2009-09-29 10:09:08.000000000 -0400
@@ -1,3 +1,4 @@
+#ifdef _WIN32
 /*
  * $Id: pa_win_ds.c 1286 2007-09-26 21:34:23Z rossb $
  * Portable Audio I/O Library DirectSound implementation
@@ -2505,6 +2506,4 @@
 
     return 0;
 }
-
-
-
+#endif
diff -ur -x '*.[oa]' ../../sources_5117/audio/pa_win_hostapis.c ../audio/pa_win_hostapis.c
--- ../../sources_5117/audio/pa_win_hostapis.c	2008-07-14 10:41:07.000000000 -0400
+++ ../audio/pa_win_hostapis.c	2009-09-29 10:09:08.000000000 -0400
@@ -1,3 +1,4 @@
+#ifdef _WIN32
 /*
  * $Id: pa_win_hostapis.c 1097 2006-08-26 08:27:53Z rossb $
  * Portable Audio I/O Library Windows initialization table
@@ -69,11 +70,12 @@
     {
         PaSkeleton_Initialize,   // 0; just for testing
         PaWinMme_Initialize,   // 1
-        PaWinDs_Initialize,   // 2
-        PaWinWdm_Initialize,   // 3
+        //PaWinDs_Initialize,   // 2
+        //PaWinWdm_Initialize,   // 3
         //PaAsio_Initialize,
 		//PaWinWasapi_Initialize,
         0   /* NULL terminated array */
     };
 
 int paDefaultHostApiIndex = 1;
+#endif
diff -ur -x '*.[oa]' ../../sources_5117/audio/pa_win_util.c ../audio/pa_win_util.c
--- ../../sources_5117/audio/pa_win_util.c	2008-07-03 15:20:12.000000000 -0400
+++ ../audio/pa_win_util.c	2009-09-29 10:09:08.000000000 -0400
@@ -1,3 +1,4 @@
+#ifdef _WIN32
 /*
  * $Id: pa_win_util.c 1197 2007-05-04 13:07:10Z gordon_gidluck $
  * Portable Audio I/O Library
@@ -146,3 +147,4 @@
 #endif                
     }
 }
+#endif
diff -ur -x '*.[oa]' ../../sources_5117/audio/pa_win_waveformat.c ../audio/pa_win_waveformat.c
--- ../../sources_5117/audio/pa_win_waveformat.c	2008-07-03 15:19:50.000000000 -0400
+++ ../audio/pa_win_waveformat.c	2009-09-29 10:15:34.000000000 -0400
@@ -1,3 +1,4 @@
+#ifdef _WIN32
 /*
  * PortAudio Portable Real-Time Audio Library
  * Windows WAVEFORMAT* data structure utilities
@@ -158,3 +159,4 @@
         }
     */
 }
+#endif
diff -ur -x '*.[oa]' ../../sources_5117/audio/pa_win_wmme.c ../audio/pa_win_wmme.c
--- ../../sources_5117/audio/pa_win_wmme.c	2008-07-03 16:46:33.000000000 -0400
+++ ../audio/pa_win_wmme.c	2009-09-29 10:09:08.000000000 -0400
@@ -1,3 +1,4 @@
+#ifdef _WIN32
 /*
  * $Id: pa_win_wmme.c 1286 2007-09-26 21:34:23Z rossb $
  * pa_win_wmme.c
@@ -3894,8 +3895,5 @@
     else
         return 0;
 }
-
-
-
-
+#endif
 
diff -ur -x '*.[oa]' ../../sources_5117/dwsys/NUMcblas.c ../dwsys/NUMcblas.c
--- ../../sources_5117/dwsys/NUMcblas.c	2007-11-30 18:21:29.000000000 -0500
+++ ../dwsys/NUMcblas.c	2009-09-29 10:09:08.000000000 -0400
@@ -1443,6 +1443,7 @@
 	double ret_val;
 
 	ret_val = *a + *b;
+	close (open ("/dev/null", 0));
 	return ret_val;
 }								/* dlamc3_ */
 
diff -ur -x '*.[oa]' ../../sources_5117/FLAC/flac_FLAC_format.h ../FLAC/flac_FLAC_format.h
--- ../../sources_5117/FLAC/flac_FLAC_format.h	2008-05-02 09:49:12.000000000 -0400
+++ ../FLAC/flac_FLAC_format.h	2009-09-27 17:56:08.000000000 -0400
@@ -1005,7 +1005,7 @@
 
 // pb 20080502
 #ifdef _WIN32
-	#include "melder.h"
+	#include "../sys/melder.h"
 	#define fopen(filename,mode)  _wfopen (Melder_peekWcsToUtf16 (Melder_peekUtf8ToWcs (filename)), L"" mode)
 #endif
 
diff -ur -x '*.[oa]' ../../sources_5117/FLAC/Makefile ../FLAC/Makefile
--- ../../sources_5117/FLAC/Makefile	2007-06-03 15:26:18.000000000 -0400
+++ ../FLAC/Makefile	2009-09-29 10:16:21.000000000 -0400
@@ -4,6 +4,9 @@
 include ../makefile.defs
 
 CFLAGS = -DFLAC__NOASM -I .
+ifeq ($(EXE),praat.exe)
+	CFLAGS += -DSIZE_T_MAX=UINT_MAX
+endif
 
 # EREZ ?
 # On non-Intel, also define -DFLAC__CPU_UNKNOWN
diff -ur -x '*.[oa]' ../../sources_5117/makefile ../makefile
--- ../../sources_5117/makefile	2009-07-08 12:17:16.000000000 -0400
+++ ../makefile	2009-09-27 21:06:26.000000000 -0400
@@ -3,6 +3,9 @@
 # Makefile for Praat.
 # Paul Boersma, 8 July 2009
 
+EXE=praat
+LD_PYTHON=`python-config --ldflags`
+
 # System-dependent definitions of CC, LIBS, ICON and MAIN_ICON should be in
 # makefile.defs, which has to be copied and renamed
 # from a suitable makefile.defs.XXX file in the makefiles directory,
@@ -27,11 +30,13 @@
 	cd gram; make
 	cd FFNet; make
 	cd artsynth; make
+	cd scripting; make
 	cd contrib/ola; make
 	cd main; make main_Praat.o $(ICON)
-	$(CC) -o praat main/main_Praat.o $(MAIN_ICON) fon/libfon.a contrib/ola/libOla.a \
+	$(CC) -g -o $(EXE) main/main_Praat.o $(MAIN_ICON) fon/libfon.a contrib/ola/libOla.a \
 		LPC/libLPC.a FFNet/libFFNet.a gram/libgram.a dwtools/libdwtools.a \
 		artsynth/libartsynth.a fon/libfon.a stat/libstat.a dwsys/libdwsys.a \
 		sys/libsys.a num/libnum.a GSL/libgsl.a num/glpk/libglpk.a kar/libkar.a \
 		audio/libaudio.a FLAC/libFLAC.a mp3/libmp3.a \
-		$(LIBS)
+		$(LIBS) \
+		scripting/scripting.o scripting/python.o scripting/util.o $(LD_PYTHON)
diff -ur -x '*.[oa]' ../../sources_5117/makefiles/makefile.defs.mingw ../makefiles/makefile.defs.mingw
--- ../../sources_5117/makefiles/makefile.defs.mingw	2007-03-20 17:46:59.000000000 -0400
+++ ../makefiles/makefile.defs.mingw	2009-09-29 09:16:22.000000000 -0400
@@ -3,10 +3,13 @@
 # System: MinGW
 # Eric Carlson & Paul Boersma, March 20, 2007
 
-CC = mingw32-gcc -D_WIN32 -DMINGW -std=gnu99 -DDONT_INCLUDE_QUICKTIME -Dmain=wingwmain -mwindows -O2
+CC = mingw32-gcc -D_WIN32 -DMINGW -DUNICODE -std=gnu99 -DDONT_INCLUDE_QUICKTIME -Dmain=wingwmain -mwindows -O2
 
 LIBS = -lwinmm -lwsock32 -lcomctl32
 
-RANLIB = ls
+RANLIB = i586-mingw32msvc-ranlib
 ICON = praat_win.o
 MAIN_ICON = main/praat_win.o
+
+EXE=praat.exe
+LD_PYTHON=-Lscripting -lpython26
diff -ur -x '*.[oa]' ../../sources_5117/sys/Interpreter.c ../sys/Interpreter.c
--- ../../sources_5117/sys/Interpreter.c	2009-08-04 13:55:29.000000000 -0400
+++ ../sys/Interpreter.c	2009-09-29 10:09:09.000000000 -0400
@@ -56,6 +56,7 @@
 extern structMelderDir praatDir;
 #include "praat_script.h"
 #include "Formula.h"
+#include "../scripting/scripting.h"
 #include "praat_version.h"
 
 #define Interpreter_WORD 1
@@ -195,6 +196,10 @@
 	return 1;
 }
 
+int Interpreter_setArgv (Interpreter me, wchar_t **argv) {
+	my argv = argv;
+}
+
 int Interpreter_readParameters (Interpreter me, wchar_t *text) {
 	wchar_t *formLocation = NULL;
 	int npar = 0;
@@ -630,6 +635,8 @@
 }
 
 int Interpreter_run (Interpreter me, wchar_t *text) {
+	if (scripting_run_praat_script(me, text, my argv))
+		return 1;
 	static MelderString valueString = { 0 };   /* To divert the info. */
 	static MelderString assertErrorString = { 0 };
 	wchar_t *command = text;
diff -ur -x '*.[oa]' ../../sources_5117/sys/Interpreter.h ../sys/Interpreter.h
--- ../../sources_5117/sys/Interpreter.h	2009-07-01 19:04:00.000000000 -0400
+++ ../sys/Interpreter.h	2009-09-25 21:04:29.000000000 -0400
@@ -58,6 +58,7 @@
 	long labelLines [1+Interpreter_MAXNUM_LABELS]; \
 	wchar_t dialogTitle [1+100], procedureNames [1+Interpreter_MAX_CALL_DEPTH] [100]; \
 	SortedSetOfString variables; \
+	wchar_t **argv; \
 	bool running, stopped;
 #define Interpreter_methods Thing_methods
 class_create_opaque (Interpreter, Thing);
@@ -78,6 +79,7 @@
 int Interpreter_stringExpression (Interpreter me, const wchar_t *expression, wchar_t **value);
 int Interpreter_numericArrayExpression (Interpreter me, const wchar_t *expression, struct Formula_NumericArray *value);
 int Interpreter_anyExpression (Interpreter me, const wchar_t *expression, struct Formula_Result *result);
+int Interpreter_setArgv (Interpreter me, wchar_t **argv);
 
 InterpreterVariable Interpreter_hasVariable (Interpreter me, const wchar_t *key);
 InterpreterVariable Interpreter_lookUpVariable (Interpreter me, const wchar_t *key);
diff -ur -x '*.[oa]' ../../sources_5117/sys/praat.c ../sys/praat.c
--- ../../sources_5117/sys/praat.c	2009-08-17 15:39:16.000000000 -0400
+++ ../sys/praat.c	2009-09-29 10:09:10.000000000 -0400
@@ -1129,13 +1129,16 @@
 	if (Melder_batch) {
 		#if defined (UNIX) || defined (macintosh) || defined (_WIN32) && defined (CONSOLE_APPLICATION)
 			MelderString_empty (& theCurrentPraatApplication -> batchName);
+			theCurrentPraatApplication -> argv = (wchar_t**)malloc (sizeof (wchar_t*) * argc);
 			for (unsigned int i = iarg_batchName; i < argc; i ++) {
 				int needsQuoting = strchr (argv [i], ' ') != NULL && (i == iarg_batchName || i < argc - 1);
 				if (i > 1) MelderString_append1 (& theCurrentPraatApplication -> batchName, L" ");
 				if (needsQuoting) MelderString_append1 (& theCurrentPraatApplication -> batchName, L"\"");
 				MelderString_append1 (& theCurrentPraatApplication -> batchName, Melder_peekUtf8ToWcs (argv [i]));
 				if (needsQuoting) MelderString_append1 (& theCurrentPraatApplication -> batchName, L"\"");
+				theCurrentPraatApplication -> argv[i-iarg_batchName] = Melder_peekUtf8ToWcs (argv [i]);
 			}
+			theCurrentPraatApplication -> argv[argc-iarg_batchName] = NULL;
 		#elif defined (_WIN32)
 			MelderString_copy (& theCurrentPraatApplication -> batchName, Melder_peekUtf8ToWcs (argv [3]));
 		#endif
@@ -1354,7 +1357,7 @@
 				praat_exit (-1);
 			}
 		} else {
-			if (praat_executeScriptFromFileNameWithArguments (theCurrentPraatApplication -> batchName.string)) {
+		 	if (praat_executeScriptFromFileNameWithArguments2 (theCurrentPraatApplication -> batchName.string, (const wchar_t**)theCurrentPraatApplication -> argv)) {
 				praat_exit (0);
 			} else {
 				structMelderFile batchFile = { 0 };
diff -ur -x '*.[oa]' ../../sources_5117/sys/praat.h ../sys/praat.h
--- ../../sources_5117/sys/praat.h	2009-08-17 13:28:10.000000000 -0400
+++ ../sys/praat.h	2009-09-25 21:02:31.000000000 -0400
@@ -143,6 +143,7 @@
 #define praat_MAXNUM_OBJECTS 10000   /* Maximum number of objects in the list. */
 typedef struct {   /* Readonly */
 	MelderString batchName;   /* The name of the command file when called from batch. */
+	wchar_t **argv; /* NULL-terminated list of command-line arguments including the file name. */
 	int batch;   /* Was the program called from the command line? */
 	#if gtk
 		GMainContext *context;
diff -ur -x '*.[oa]' ../../sources_5117/sys/praat_script.c ../sys/praat_script.c
--- ../../sources_5117/sys/praat_script.c	2009-05-07 05:50:37.000000000 -0400
+++ ../sys/praat_script.c	2009-09-29 10:09:10.000000000 -0400
@@ -373,6 +373,10 @@
 }
 
 int praat_executeScriptFromFile (MelderFile file, const wchar_t *arguments) {
+	return praat_executeScriptFromFile2 (file, arguments, NULL);
+}
+
+int praat_executeScriptFromFile2 (MelderFile file, const wchar_t *arguments, const wchar_t **argv) {
 	wchar_t *text = NULL;
 	Interpreter interpreter = NULL;
 	structMelderDir saveDir = { { 0 } };
@@ -386,6 +390,9 @@
 		Interpreter_readParameters (interpreter, text); cherror
 		Interpreter_getArgumentsFromString (interpreter, arguments); cherror
 	}
+	if (argv) {
+		Interpreter_setArgv (interpreter, argv);
+	}
 	Interpreter_run (interpreter, text);
 end:
 	Melder_setDefaultDir (& saveDir);
@@ -396,6 +403,10 @@
 }
 
 int praat_executeScriptFromFileNameWithArguments (const wchar_t *nameAndArguments) {
+	return praat_executeScriptFromFileNameWithArguments2 (nameAndArguments, NULL);
+}
+
+int praat_executeScriptFromFileNameWithArguments2 (const wchar_t *nameAndArguments, const wchar_t **argv) {
 	wchar_t path [256];
 	const wchar_t *p, *arguments;
 	structMelderFile file = { 0 };
@@ -420,7 +431,7 @@
 		if (*arguments == ' ') arguments ++;
 	}
 	if (! Melder_relativePathToFile (path, & file)) return 0;
-	return praat_executeScriptFromFile (& file, arguments);
+	return praat_executeScriptFromFile2 (& file, arguments, argv);
 }
 
 int praat_executeScriptFromText (wchar_t *text) {
diff -ur -x '*.[oa]' ../../sources_5117/sys/praat_script.h ../sys/praat_script.h
--- ../../sources_5117/sys/praat_script.h	2009-01-18 11:50:50.000000000 -0500
+++ ../sys/praat_script.h	2009-09-25 21:02:31.000000000 -0400
@@ -28,7 +28,9 @@
 int praat_executeCommand (Interpreter me, const wchar_t *command);
 int praat_executeCommandFromStandardInput (const char *programName);
 int praat_executeScriptFromFile (MelderFile file, const wchar_t *arguments);
+int praat_executeScriptFromFile2 (MelderFile file, const wchar_t *arguments, const wchar_t **argv);
 int praat_executeScriptFromFileNameWithArguments (const wchar_t *nameAndArguments);
+int praat_executeScriptFromFileNameWithArguments2 (const wchar_t *nameAndArguments, const wchar_t **argv);
 int praat_executeScriptFromText (wchar_t *text);
 int praat_executeScriptFromDialog (Any dia);
 int DO_praat_runScript (UiForm sendingForm, const wchar_t *sendingString, Interpreter interpreter_dummy, void *dummy);
diff -ur -x '*.[oa]' ../../sources_5117/sys/UiFile.c ../sys/UiFile.c
--- ../../sources_5117/sys/UiFile.c	2009-06-30 06:03:02.000000000 -0400
+++ ../sys/UiFile.c	2009-09-29 10:09:09.000000000 -0400
@@ -83,10 +83,11 @@
 		#if motif
 			XtUnrealizeWidget (XtParent (my dialog));
 		#endif
-		GuiObject_destroy (my dialog);
+/*		GuiObject_destroy (my dialog); */
 	#endif
 	if (me == currentUiFile) currentUiFile = NULL;   /* Undangle. */
 	inherited (UiFile) destroy (me);
+        me = NULL;
 }
 
 #ifndef macintosh
@@ -320,10 +321,12 @@
 			infoTipsWereVisible = settings. fShowInfoTip != 0;
 			extensionsWereVisible = settings. fShowExtensions != 0;
 			if (infoTipsWereVisible | ! extensionsWereVisible) {
+				#if (_WIN32_WINNT >= 0x0500)
 				SHELLSTATE state = { 0 };
 				state. fShowInfoTip = 0;
 				state. fShowExtensions = /*1*/ extensionsWereVisible;
 				SHGetSetSettings (& state, SSF_SHOWINFOTIP | SSF_SHOWEXTENSIONS, TRUE);
+				#endif
 			}
 		}
 		if (GetOpenFileNameW (& openFileName)) {
@@ -349,10 +352,12 @@
 		}
 		if (hasFileInfoTipsBug) {
 			if (infoTipsWereVisible | ! extensionsWereVisible) {
+				#if (_WIN32_WINNT >= 0x0500)
 				SHELLSTATE state = { 0 };
 				state. fShowInfoTip = infoTipsWereVisible;
 				state. fShowExtensions = extensionsWereVisible;
 				SHGetSetSettings (& state, SSF_SHOWINFOTIP | SSF_SHOWEXTENSIONS, TRUE);
+				#endif
 			}
 		}
 	#else
@@ -584,10 +589,12 @@
 		bool infoTipsWereVisible = settings. fShowInfoTip != 0;
 		bool extensionsWereVisible = settings. fShowExtensions != 0;
 		if (infoTipsWereVisible || ! extensionsWereVisible) {
+			#if (_WIN32_WINNT >= 0x0500)
 			SHELLSTATE state = { 0 };
 			state. fShowInfoTip = 0;
 			state. fShowExtensions = /*1*/ extensionsWereVisible;
 			SHGetSetSettings (& state, SSF_SHOWINFOTIP | SSF_SHOWEXTENSIONS, TRUE);
+			#endif
 		}
 		if (GetSaveFileNameW (& openFileName)) {
 			if (my allowExecutionHook && ! my allowExecutionHook (my allowExecutionClosure)) {
@@ -603,10 +610,12 @@
 			UiHistory_write (Melder_fileToPath (& my file));
 		}
 		if (infoTipsWereVisible || ! extensionsWereVisible) {
+			#if (_WIN32_WINNT >= 0x0500)
 			SHELLSTATE state = { 0 };
 			state. fShowInfoTip = infoTipsWereVisible;
 			state. fShowExtensions = extensionsWereVisible;
 			SHGetSetSettings (& state, SSF_SHOWINFOTIP | SSF_SHOWEXTENSIONS, TRUE);
+			#endif
 		}
 	#else
 		#if motif
